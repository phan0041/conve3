"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

#import dj_database_url


#social authentication
from LandingPage.config import *

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-v!bpekm0#mpbz5uqlz#q&no)fbz4wkol6gphjdkez2m0!c3b('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = TEMPLATE_DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ConvePlatform',
    'LandingPage',
    'AccountManagement',
    'RequestManagement',
    'BackendDevTest',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

TEMPLATE_CONTEXT_PROCESSORS = (
    'django.contrib.auth.context_processors.auth',
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.core.context_processors.static',
    'django.core.context_processors.tz',
    'django.contrib.messages.context_processors.messages',
    # 'social.apps.django_app.context_processors.backends',
    # 'social.apps.django_app.context_processors.login_redirect',
)

AUTHENTICATION_BACKENDS = (
    # 'social.backends.facebook.FacebookOAuth2',
    'django.contrib.auth.backends.ModelBackend',
    

)


# SOCIAL_AUTH_PIPELINE =(
#     # Get the information we can about the user and return it in a simple
#     # format to create the user instance later. On some cases the details are
#     # already part of the auth response from the provider, but sometimes this
#     # could hit a provider API.
#     'social.pipeline.social_auth.social_details',
#
#     # Get the social uid from whichever service we're authing thru. The uid is
#     # the unique identifier of the given user in the provider.
#     'social.pipeline.social_auth.social_uid',
#
#     # Verifies that the current auth process is valid within the current
#     # project, this is were emails and domains whitelists are applied (if
#     # defined).
#     'social.pipeline.social_auth.auth_allowed',
#
#     # Checks if the current social-account is already associated in the site.
#     'social.pipeline.social_auth.social_user',
#
#     # Make up a username for this person, appends a random string at the end if
#     # there's any collision.
#     'social.pipeline.user.get_username',
#
#     # Send a validation email to the user to verify its email address.
#     # Disabled by default.
#     # 'social.pipeline.mail.mail_validation',
#
#     # Associates the current social details with another user account with
#     # a similar email address. Disabled by default.
#     # 'social.pipeline.social_auth.associate_by_email',
#
#     # Create a user account if we haven't found one yet.
#     'social.pipeline.user.create_user',
#     # Create the record that associated the social account with this user.
#     'social.pipeline.social_auth.associate_user',
#
#     # Populate the extra_data field in the social record with the values
#     # specified by settings (and the default ones like access_token, etc).
#     'social.pipeline.social_auth.load_extra_data',
#
#     # Update the user record with any changed info from the auth service.
#     'social.pipeline.user.user_details',
#
# )
#
#

ROOT_URLCONF = 'ConvePlatform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ConvePlatform.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    # staging database
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'd8n1iqa93iu5in',                      # Or path to database file if using sqlite3.
        'USER': 'offegklhlaxpny',                      # Not used with sqlite3.
        'PASSWORD': 'kOGJgRKjf8fNuTQHRQK8AQeJQp',                  # Not used with sqlite3.
        'HOST': 'ec2-107-21-223-72.compute-1.amazonaws.com',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '5432',                      # Set to empty string for default. Not used with sqlite3.
    },
    # dev db
    'dev': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'da8f0sm5ul4goh',                      # Or path to database file if using sqlite3.
        'USER': 'sefazhfncoudty',                      # Not used with sqlite3.
        'PASSWORD': '828NyUkOz_b7y41M6na_JdHL5y',                  # Not used with sqlite3.
        'HOST': 'ec2-54-197-238-19.compute-1.amazonaws.com',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '5432',                      # Set to empty string for default. Not used with sqlite3.
    },
    # production db
    'prod': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'd61u0s06a5btld',                      # Or path to database file if using sqlite3.
        'USER': 'wxvxdhyqgucydh',                      # Not used with sqlite3.
        'PASSWORD': '9jlijGhjzuUHDjh9vGZ70x72YJ',                  # Not used with sqlite3.
        'HOST': 'ec2-54-204-20-209.compute-1.amazonaws.com',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '5432',                      # Set to empty string for default. Not used with sqlite3.
    },
    # mysql db
    'mysql': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'conve',                      # Or path to database file if using sqlite3.
        'USER': 'root',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        'HOST': 'localhost',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    },
    'sqlite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
# DATABASES = {}
# DATABASES['default'] = dj_database_url.config(default="postgres://wxvxdhyqgucydh:9jlijGhjzuUHDjh9vGZ70x72YJ@ec2-54-204-20-209.compute-1.amazonaws.com:5432/d61u0s06a5btld")

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Singapore'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_ROOT = 'staticfiles'
STATIC_URL = '/static/'

# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'LandingPage/static'),
# )

STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'

TEMPLATE_DIRS = (
    os.path.join(BASE_DIR,  'templates'),
)

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_HOST_USER = 'vandan193@gmail.com'
# EMAIL_HOST_PASSWORD = '064596501'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True

EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'conve1008@gmail.com'
EMAIL_HOST_PASSWORD = 'matkhaukho'
EMAIL_PORT = 587
DEFAULT_FROM_EMAIL = 'my gmail account'
DEFAULT_TO_EMAIL = 'to email'

try:
    from local_settings import *
except ImportError:
    pass